#include <iostream>

using namespace std;

const int N = 501;
int container[N];

bool dou() {
	int i, n = container[0], carry = 0;
	for (i = 1; i <= n && i < N; i++) {
		carry += container[i] << 1;
		container[i] = carry % 10;
		carry /= 10;
	}
	if (i < N) {
		if (carry) {
			container[i] = carry;
			container[0] = i;
		}
		return true;
	}
	return false;
}

void dec() {
	int i, n = container[0], carry = -1;
	for (i = 1; i <= n; i++) {
		carry += container[i];
		if (carry < 0) {
			container[i] = 9;
			carry = -1;
		}
		else {
			container[i] = carry;
			carry = 0;
			break;
		}
	}
	if (container[n] == 0) container[0] = n - 1;
}

void showT() {
	int i = container[0];
	for (; i; i--) cout << container[i];
	cout << endl;
}

void show() {
	int i = container[0], j, k, d = 500 - i;
	for (j = 1, k = 0; j <= 500; j++) {
		if (k < d) {
			cout << 0;
			k++;
		}
		else cout << container[i--];
		if (j % 50 == 0) cout << endl;
	}
}

int main() {
	int p;
	while (cin >> p) {
		container[0] = container[1] = 1;
		for (; p; p--) dou();
		dec();
		show();
	}
	return 0;
}

#include<stdio.h>  
#include<stdlib.h>  
#include<math.h>  
#include<string.h>  
void mul(int*x,int*y){  
int a[126];  
memset(a,0,sizeof(a));  
int i,j;  
for(i=0;i<126;i++)  
    {  for(j=0;j<126;j++)  
           if(i+j<126)a[i+j]+=x[j]*y[i];  
for(j=0;j<125;j++)  
    if(a[j]>=10000){a[j+1]+=a[j]/10000;a[j]%=10000;}  
}  
memcpy(x,a,sizeof(a));}  
int main(){  
int p;  
    int aa[126];  
    int aapow[126];  
    memset(aa,0,sizeof(aa));  
    memset(aapow,0,sizeof(aapow));  
    aa[0]=1;  
    aapow[0]=2;  
    int i,j;  
    int k;  
    scanf("%d",&p);  
    k=(int)p*log10(2.0)+1;  
    printf("%d\n",k);  
    while(p){  
    if(p&1)  
      mul(aa,aapow);  
    p>>=1;  
    if(p)  
      mul(aapow,aapow);}  
    aa[0]--;  
    for(i=124;i>=0;i--){  
    if(i%25==12)printf("%02d\n%02d",aa[i]/100,aa[i]%100);  
    else{printf("%04d",aa[i]);  
      if(i%25==0)printf("\n");}}  
return 0;}  