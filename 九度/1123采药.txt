#include <iostream>
#define INF 0x7fffffff

using namespace std;

int max(int a, int b) { return (b > a ? b : a); }

struct E {
	int t, v;
} list[101];
int dp[101][1001];

int main() {
	int s, n;
	int i, j;
	while (cin >> s >> n) {
		for (i = 1; i <= n; i++) cin >> list[i].t >> list[i].v;
		for (i = 0; i <= s; i++) dp[0][i] = 0;
		for (i = 1; i <= n; i++) {
			for (j = s; j >= list[i].t; j--) {
				dp[i][j] = max(dp[i - 1][j],
					dp[i - 1][j - list[i].t] + list[i].v);
			}
			for (j = list[i].t - 1; j >= 0; j--) 
				dp[i][j] = dp[i - 1][j];
		}
		cout << dp[n][s] << endl;
	}
	return 0;
}

#include <iostream>
#define INF 0x7fffffff

using namespace std;

int max(int a, int b) { return (b > a ? b : a); }

struct E {
	int t, v;
} list[101];
int dp[1001];

int main() {
	int s, n;
	int i, j;
	while (cin >> s >> n) {
		for (i = 1; i <= n; i++) cin >> list[i].t >> list[i].v;
		for (i = 0; i <= s; i++) dp[i] = 0;
		for (i = 1; i <= n; i++) {
			for (j = s; j >= list[i].t; j--)
				dp[j] = max(dp[j],
					dp[j - list[i].t] + list[i].v);
		}
		cout << dp[s] << endl;
	}
	return 0;
}
