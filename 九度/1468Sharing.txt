#include <iostream>

using namespace std;

const int N = 100000;
struct word {
	char c;
	int next;
	word() {
		c = '\0';
		next = -1;
	}
	void reset() { next = -2; }
};
word container[N];

int getLen(int head) {
	if (container[head].next == -2) return 0;
	int ans = 1;
	while (container[head].next + 1) {
		//cout << container[head].c;
		ans++;
		head = container[head].next;
	}
	//cout << container[head].c << endl;
	return ans;
}

int main() {
	char c;
	int heada, headb;
	int n, cur, next;
	int ans, lena, lenb;
	while (cin >> heada >> headb >> n) {
		for (int i = 0; i < N; i++) container[i].reset();
		ans = -1;
		for (; n; n--) {
			cin >> cur >> c >> next;
			container[cur].c = c;
			container[cur].next = next;
		}
		lena = getLen(heada);
		lenb = getLen(headb);
		if (lena && lenb) {
			if (lena > lenb) {
				lena -= lenb;
				for (; lena; lena--)
					heada = container[heada].next;
			}
			else {
				lenb -= lena;
				for (; lenb; lenb--)
					headb = container[headb].next;
			}
			//cout << heada << " " << headb << endl;
			//cout << container[heada].c << " " << container[headb].c << endl;
			while (container[heada].next + 1){
				if (heada == headb) {
					ans = heada;
					break;
				}
				heada = container[heada].next;
				headb = container[headb].next;
			}
		}
		cout << ans << endl;
	}
	return 0;
}

#include <stdio.h>  
   
#define MAXN 100001  
   
typedef struct node{  
    char data;  
    int next;  
}Node;  
   
int main(void){  
    int first, second, N;  
    Node word[MAXN];  
    char data;  
    int addr, next, i;  
    int len1, len2;  
    int tfirst, tsecond;  
   
    while (scanf ("%d %d %d", &first, &second, &N) != EOF){  
        for (i=0; i<N; ++i){  
            scanf ("%d %c %d", &addr, &data, &next);  
            word[addr].data = data;  
            word[addr].next = next;  
        }  
        len1 = len2 = 0;  
        tfirst = first;  
        tsecond = second;  
        for (i=0; i<N; ++i){           //求得两个单词的长度  
            if (tfirst != -1){  
                ++len1;  
                tfirst = word[tfirst].next;  
            }  
            if (tsecond != -1){  
                ++len2;  
                tsecond = word[tsecond].next;  
            }  
        }  
        while (len1 > len2){  
            first = word[first].next;  
            --len1;  
        }  
        while (len2 > len1){  
            second = word[second].next;  
                --len2;  
        }  
        while (len1 > 0){  
            if (first == second){  
                printf ("%05d\n", first);  
                break;  
            }  
            else{  
                first = word[first].next;  
                second = word[second].next;  
            }  
            --len1;  
        }  
        if (len1 == 0)  
            printf ("-1\n");  
    }  
    return 0;  
}  