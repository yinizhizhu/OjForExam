#include <iostream>
#include <set>
#include <stack>
#include <queue>
#include <vector>
#include <string>

using namespace std;

int kmp(string& a, int head, string& tmp, vector<int>& next);
void getNext(string& tmp, vector<int>& next);

int main()
{
	int i, ans;
	string T, P;
	while (cin >> T >> P) {
		vector<int> next;
		getNext(T, next);
		ans = 0;
		for (i = 1;; i++) {
			i = kmp(T, i, P, next);
			if (i == -1) break;
			ans++;
		}
		cout << ans << endl;
	}
	return 0;
}

int kmp(string& a, int head, string& tmp, vector<int>& next)
{
	int i = head, j = 1;
	int len1 = a.size(), len2 = tmp.size();
	while (i <= len1 && j <= len2) {
		if (j == 0 || a[i - 1] == tmp[j - 1]) {
			++i;
			++j;
		}
		else
			j = next[j];
	}
	if (j > len2)
		return i - len2;
	return -1;
}

void getNext(string& tmp, vector<int>& next) {
	int i = 1, j = 0;
	int len = tmp.size();
	next.resize(len + 1);
	next[i] = 0;
	while (i <= len) {
		if (j == 0 || tmp[i - 1] == tmp[j - 1]) {
			++i;
			if (i > len) break;
			next[i] = ++j;
		}
		else
			j = next[j];
	}
	return;
}
