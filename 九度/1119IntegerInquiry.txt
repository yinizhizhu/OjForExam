#include <iostream>
#include <string>
#include <vector>

using namespace std;

const int N = 102;
int container[2][N];

void init() {
	for (int i = 0; i < N; i++) container[0][i] = container[1][i] = 0;
}

void get(string& str, int p) {
	int i, j, len = str.size();
	container[p][0] = len;
	for (i = len - 1, j = 1; i >= 0; i--, j++)
		container[p][j] = str[i] - '0';
}

void add() {
	int i, carry = 0;
	int len0 = container[0][0], len1 = container[1][0], len;
	len = (len0 > len1 ? len1 : len0);
	for (i = 1; i <= len; i++) {
		carry += container[0][i] + container[1][i];
		container[0][i] = carry % 10;
		carry /= 10;
	}
	for (; i <= len0; i++) {
		carry += container[0][i];
		container[0][i] = carry % 10;
		carry /= 10;
	}
	for (; i <= len1; i++) {
		carry += container[1][i];
		container[0][i] = carry % 10;
		carry /= 10;
	}
	if (carry) container[0][i++] = carry;
	container[0][0] = i - 1;
}

void show() {
	int i = container[0][0];
	for (; i >= 1; i--) cout << container[0][i];
	cout << endl;
}

int main() {
	init();
	int p = 0;
	string str;
	while (cin >> str && str != "0") {
		if (p == 0) get(str, p++);
		else {
			get(str, p);
			add();
		}
	}
	show();
	return 0;
}